/** Minicomputer
 * industrial grade digital synthesizer
 * editorsoftware
 * Copyright 2007 Malte Steiner
 * This file is part of Minicomputer, which is free software: you can
 * redistribute it and/or modify it under the terms of the GNU General Public
 * License as published by the Free Software Foundation, either version 3 of the
 * License, or (at your option) any later version.
 *
 * Minicomputer is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */

#ifndef syntheditor_h
#define syntheditor_h
// generated by Fast Light User Interface Designer (fluid) version 1.0107
#include "Memory.h"

#include "widgets.h"
#include <FL/Fl.H>
#include <FL/Fl_Double_Window.H>
#include <FL/Fl_Group.H>
#include <FL/Fl_Dial.H>
#include <FL/Fl_Roller.H>
#include <FL/Fl_Value_Output.H>
#include <FL/Fl_Value_Input.H>
#include <FL/Fl_Input_Choice.H>
#include <FL/Fl_Light_Button.H>
#include <FL/Fl_Menu_Button.H>
#include <FL/Fl_Box.H>
#include <FL/Fl_Button.H>
#include <FL/Fl_Tabs.H>

#include <FL/Fl_File_Chooser.H>
#include <FL/Fl_Choice.H>
#include <FL/Fl_Slider.H>
#include <FL/Fl_Input_Choice.H>
#include <FL/Fl_Counter.H>
#include <FL/Fl_Help_View.H>
#include <FL/Fl_Positioner.H>
#include <FL/Enumerations.H>
#include <FL/fl_draw.H>
//#include <FL/Fl_Chart.H>
// thanks to Leslie P. Polzer pointing me out to include cstring and more for gcc 4.3 onwards
#include <cstdio>
#include <cstdlib>
//#include <unistd.h>
#include <cstring>
#include <math.h>
#include <FL/Fl_Image.H>
#include "../common.h"
extern Memory Speicher;

/*
class Fl_SteinerKnob:public Fl_Dial
{
    public:
    Fl_SteinerKnob(int x, int y, int w, int h, const char *label);//:Fl_Dial(x,
y, w, h, label); int handle(int event) override; private: int altx;
};
*/
/** custom class for window, derieved from Fl_Double_Window
 *
 * \callgraph
 * \callergraph
 */
class Fenster : public Fl_Double_Window {
public:
    Fenster(int w, int h, const char *t);
    Fenster(int w, int h);
    ~Fenster();
    int handle(int event) override;
};

class UserInterface {
public:
    Fenster *make_window();
    void changeMulti(int pgm);
    void changeSound(int channel, int pgm);
    Mw_Dial *f1cut1;
    Mw_Dial *f1q1;
    Mw_Dial *f1vol1;
    Mw_Dial *f1cut2;
    Mw_Dial *f1q2;
    Mw_Dial *f1vol2;
    Mw_Dial *f2cut1;
    Mw_Dial *f2q1;
    Mw_Dial *f2vol1;
    Mw_Dial *f2cut2;
    Mw_Dial *f2q2;
    Mw_Dial *f2vol2;
    Mw_Dial *f3cut1;
    Mw_Dial *f3q1;
    Mw_Dial *f3vol1;
    Mw_Dial *f3cut2;
    Mw_Dial *f3q2;
    Mw_Dial *f3vol2;

    Fl_Input *soundchoice[8];
    Fl_Input *multichoice;

private:
    string tablabel[9];
};

#endif
